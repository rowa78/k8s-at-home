---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rancher-monitoring
  namespace: cattle-monitoring-system
spec:
  interval: 1h
  chart:
    spec:
      chart: rancher-monitoring
      version: 100.1.2+up19.0.3
      sourceRef:
        kind: HelmRepository
        name: rancher-charts-release-2-6
        namespace: flux-system
  values:
    alertmanager:
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn-backup
              resources:
                requests:
                  storage: 10Gi        
        podAntiAffinity: "hard"
    prometheus-node-exporter:
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: instance
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    grafana:
      nodeSelector:
        kubernetes.io/arch: amd64
      persistence:
        enabled: "true"
        accessModes:
          - ReadWriteMany
        storageClassName: longhorn-backup
        size: 1Gi
        subPath: null
        type: pvc
      sidecar:
        datasources:
          enabled: true
          searchNamespace: ALL
          # defaultDatasourceEnabled: false
        dashboards:
          enabled: true
          searchNamespace: ALL
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
      dashboards:
        default:
          1-node-exporter:
            url: https://grafana.com/api/dashboards/11074/revisions/9/download
            datasource: Prometheus
          blocky:
            url: https://raw.githubusercontent.com/0xERR0R/blocky/v0.18/docs/blocky-grafana.json
            datasource: Prometheus
          # Ref: https://grafana.com/grafana/dashboards/2842          
          flux-cluster:
            url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/cluster.json
            datasource: Prometheus
          flux-control-plane:
            url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/control-plane.json
            datasource: Prometheus
          home-assistant:
            url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/home_assistant.json
            datasource: home_assistant
          loki:
            gnetId: 13407
            revision: 1
            datasource: Prometheus
          minio-overview:
            url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/minio_overview.json
            datasource: Prometheus
          nginx-dashboard:
            url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
            datasource: Prometheus
          node-exporter-full:
            gnetId: 1860
            revision: 23
            datasource: Prometheus
          prometheus-exporter-summary:
            url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/prometheus_exporter_summary.json
            datasource: Prometheus          
          # Ref: https://grafana.com/grafana/dashboards/11312          
          velero:
            url: https://grafana.com/api/dashboards/11055/revisions/2/download
            datasource: Prometheus   
      datasources:
        datasources.yaml:
          apiVersion: 1
          datasources:
          - name: Prometheus
            type: prometheus
            url: http://rancher-monitoring-prometheus:9090
            access: proxy
            isDefault: true          
          - name: loki
            type: loki
            access: proxy
            url: http://loki.logs.svc.cluster.local:3100            
    prometheus:
      prometheusSpec:
        resources:
          limits:
            cpu: 1000m
            memory: 6000Mi
          requests:
            cpu: 750m
            memory: 4000Mi
        retention: 6h
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              resources:
                requests:
                  storage: 10Gi
        nodeSelector:
          kubernetes.io/arch: amd64
        podAntiAffinity: "hard"
#        storageSpec:
#          volumeClaimTemplate:
#            spec:
#              accessModes:
#                - ReadWriteMany
#              resources:
#                requests:
#                  storage: 15Gi
#              volumeMode: Filesystem
#              storageClassName: longhorn
        thanos:
          image: quay.io/thanos/thanos:v0.27.0
          version: v0.24.0
          objectStorageConfig:
            name: thanos-objstore-secret
            key: objstore.yml
        additionalScrapeConfigs:        
        - job_name: minio-job
          bearer_token: ${MINIO_PROMETHEUS_BEARER_TOKEN}
          metrics_path: /minio/v2/metrics/cluster
          scheme: https
          static_configs:
          - targets: 
            - minio.${SECRET_DOMAIN}
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
      thanosIngress:
        enabled: false
        